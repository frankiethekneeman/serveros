var ServerosError = require('./ServerosError')
    ;

/**
 *  A base class to wrap errors generated by other JS libraries.
 *  
 *  @class Error.WrappedError
 *  @extends ServerosError
 *  @inheritdoc
 *  @param {Error} [err] The wrapped Error
 *  @param {String} [message] A message about where the error occured.
 */
function WrappedError(err, message) {
    ServerosError.call(this, message);
    if (err) this.err = err;
}

WrappedError.prototype = Object.create(ServerosError.prototype);

Object.defineProperty(WrappedError.prototype, 'constructor', {
    enumerable: false
    , value: WrappedError
});

/**
 *  The error that this error wraps.
 *  
 *  @default
 */
WrappedError.prototype.err = {
    message: "No Error Provided."
}

/**
 *  Returns the messaage from the root error in an object.
 *  
 *  @override
 */
WrappedError.prototype.additionalInformation = function() {
    return {
        rootError: this.err.message
    }
};

module.exports = exports = WrappedError;
